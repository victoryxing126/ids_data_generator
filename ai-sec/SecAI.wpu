#!wing
#!version=8.0
##################################################################
# Wing project file : User-specific branch                       #
##################################################################
[user attributes]
debug.breakpoints = {loc('LSTM-1-train-saveModel.py'): {19: (0,
        None,
        1,
        0),
        81: (0,
             None,
             1,
             0)},
                     loc('LSTM-3-Prediction.py'): {50: (0,
        None,
        1,
        0)},
                     loc('LSTM-3-PredictionUseSavedModel.py'): {57: (0,
        None,
        1,
        0),
        68: (0,
             None,
             1,
             0)},
                     loc('LSTM-CNN(MVC-BiCNN)/main.py'): {43: (0,
        None,
        1,
        0)},
                     loc('LSTM-train-saveModel.py'): {137: (0,
        None,
        1,
        0)},
                     loc('LSTM-train-saveModle.py'): {137: (0,
        None,
        1,
        0)},
                     loc('LSTM-train.py'): {137: (0,
        None,
        1,
        0)},
                     loc('LSTM.py'): {137: (0,
        None,
        1,
        0)},
                     loc('lstm/GPU_Intel_LSTM_train.py'): {108: (0,
        None,
        1,
        0),
        111: (0,
              None,
              1,
              0)},
                     loc('lstm/LSTM-3-Prediction.py'): {68: (0,
        None,
        1,
        0)},
                     loc('lstm/lstm-1-train-test.py'): {201: (0,
        None,
        1,
        0)},
                     loc('lstm/lstm-train-test.py'): {111: (0,
        None,
        1,
        0),
        188: (0,
              None,
              1,
              0)},
                     loc('tmp.py'): {61: (0,
        None,
        1,
        0)}}
debug.err-values = {loc('LSTM.py'): {},
                    loc('lstm/lstm-train-test.py'): {}}
debug.show-args-dialog = {loc('0_ReadCsvInsertDB.py'): False,
                          loc('0_ReadHarToCsv.py'): False,
                          loc('LSTM-1-train.py'): False,
                          loc('LSTM-2-testAccLoss.py'): False,
                          loc('LSTM-3-Prediction.py'): False,
                          loc('LSTM-CNN(MVC-BiCNN)/main.py'): False,
                          loc('common_func.py'): False,
                          loc('lstm/0_ReadCsvInsertDB.py'): False,
                          loc('lstm/0_ReadHarToCsv.py'): False,
                          loc('lstm/GPU_Intel_LSTM_train.py'): False,
                          loc('lstm/lstm-1-train-test.py'): False,
                          loc('lstm/lstm-2-prediction.py'): False}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'hF1DnzIQ7aHqnd8VNbHbelc1eaxuMKMV',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.3225613405146619,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(0,),
        (0,
         7),
        (1,)],
                                 'selected-nodes': [(1,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('indent',
                               'tall',
                               0,
                               {}),
                              ('debug-data',
                               'tall',
                               0,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3],
        'notebook_display': 'normal',
        'notebook_percent': 0.3774834437086093,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'Python Files',
                                  'fLocation': 'Application_Security/SOC_WEB_APIJOB',
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': True,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 40,
                                       'fReplaceText': '',
                                       'fReverse': True,
                                       'fSearchText': 'def DB_Conn',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': 'SaveModel',
                                       'fReverse': False,
                                       'fSearchText': 'random',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      0,
                      {}),
                     ('source-assistant',
                      'wide',
                      0,
                      {}),
                     ('uses',
                      'wide',
                      0,
                      {}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [('symbolic',
        ['dataUsage_hubbleDLUserNum_statistic'])],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [(0,),
        (0,)],
                                      'top-node': (0,)}}),
                     ('versioncontrol.git',
                      'wide',
                      0,
                      {}),
                     ('debug-probe',
                      'wide',
                      0,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 92,
                       'folded-linenos': [],
                       'history': {'file:C:/GitCode/git_private/ai-sec/lstm/lstm-2-prediction.py': ['train_val_sample_ids = train_val_sample_ids[0].get("to_be_exclude_ids")\n',
        'train_val_sample_ids\n',
        'sample_num = 4\n',
        'SQLQueyData = f"""(SELECT id,md5_sample,convert(FROM_BASE64(sample_b64) using UTF8MB4) AS sample,is_abnormal,attack_type,attack_type_zh,length_sample FROM sec_ai.{_table} \nWHERE is_abnormal=0 AND id NOT IN ({train_val_sample_ids}) ORDER BY RAND() LIMIT {str(sample_num)})\nUNION\n(SELECT id,md5_sample,convert(FROM_BASE64(sample_b64) using UTF8MB4) AS sample,is_abnormal,attack_type,attack_type_zh,length_sample FROM sec_ai.{_table}\nWHERE is_abnormal=1 AND id NOT IN ({train_val_sample_ids}) ORDER BY RAND() LIMIT {str(sample_num)}) ; """\n\n',
        "data_list = pandas.read_sql(SQLQueyData, conn).to_dict(orient='records')\n",
        'len(data_list)\n',
        'data_list\n',
        'print(f"使用 {model_id} 号模型h5文件对下列样本的预测结果：")    \nfor each in data_list:\n    result = predict_data(conn, model_id, each.get("sample"))\n    print(f"模型预测异常概率：{result * 100:.2f}%")\n    print(f"实际打标异常概率：{str(int(each.get(\'is_abnormal\'))*100)}%")\n    print(f"""该样本【md5: {each.get("md5_sample")} 】打标的攻击类型为："""+each.get("attack_type_zh"))\nconn.close()\n\n',
        'result\n',
        "each.get('is_abnormal')\n",
        "each.get('is_abnormal') - result\n",
        "abs(each.get('is_abnormal') - result)\n",
        'datetime.datetime.now()\n',
        'datetime.datetime.strftime(datetime.datetime.now(), "%Y")\n',
        'datetime.datetime.strftime(datetime.datetime.now(), "%Y-%m-%d ")\n',
        'datetime.datetime.strftime(datetime.datetime.now(), "%Y-%m-%d %H:%M%S")\n',
        'datetime.datetime.strftime(datetime.datetime.now(), "%Y-%m-%d %H:%M%s")\n',
        'datetime.datetime.strftime(datetime.datetime.now(), "%Y-%m-%d %H:%M:%S")\n',
        'def RemarkMistake(conn, deviation, model_id, data, table, result):\n    """为预测偏差过大的数据打标; 当预测结果(result)与实际打标值(0或1)的差值超过 deviation、将修改该数据的 special 为 yes ，并在 remark 列追加原因"""\n    if abs(float(each.get(\'is_abnormal\')) - float(result)) >= float(deviation):\n        print(f"""偏差超过{str(deviation)}、将在数据集表remark记录""")\n    return DB_ChangeSql(conn, f""" UPDATE sec_ai.{table} SET special=\'yes\',\n        remark = CONCAT(remark, \'{datetime.datetime.strftime(datetime.datetime.now(), "%Y-%m-%d %H:%M:%S")} {model_id}号模型预测结果为{result}、偏差超过{str(deviation)}\')\n        WHERE your_condition; """, isCommit=True)\n\n',
        'data = each\n',
        'data\n',
        'def RemarkMistake(conn, deviation, model_id, data, table, result):\n    """为预测偏差过大的数据打标; 当预测结果(result)与实际打标值(0或1)的差值超过 deviation、将修改该数据的 special 为 yes ，并在 remark 列追加原因"""\n    if abs(float(each.get(\'is_abnormal\')) - float(result)) >= float(deviation):\n        print(f"""偏差超过{str(deviation)}、将在数据集表remark记录""")\n    return DB_ChangeSql(conn, f""" UPDATE sec_ai.{table} SET special=\'yes\',\n        remark = CONCAT(remark, \'{datetime.datetime.strftime(datetime.datetime.now(), "%Y-%m-%d %H:%M:%S")} {model_id}号模型预测结果为{result}、偏差超过{str(deviation)}\')\n        WHERE md5_sample=\'{data.get("md5_sample")}\' ; """, isCommit=True)\n\n',
        'RemarkMistake(conn, deviation, model_id, each, _table, result)\n',
        'def RemarkMistake(conn, deviation, model_id, data, table, result):\n    """为预测偏差过大的数据打标; 当预测结果(result)与实际打标值(0或1)的差值超过 deviation、将修改该数据的 special 为 yes ，并在 remark 列追加原因"""\n    if abs(float(data.get(\'is_abnormal\')) - float(result)) >= float(deviation):\n        print(f"""偏差超过{str(deviation)}、将在数据集表remark记录""")\n    return DB_ChangeSql(conn, f""" UPDATE sec_ai.{table} SET special=\'yes\',\n        remark = CONCAT(remark, \'{datetime.datetime.strftime(datetime.datetime.now(), "%Y-%m-%d %H:%M:%S")} {model_id}号模型预测结果为{result}、偏差超过{str(deviation)}\')\n        WHERE md5_sample=\'{data.get("md5_sample")}\' ; """, isCommit=True)\n\n',
        'conn = DB_Conn()\n',
        'each\n',
        'def RemarkMistake(conn, deviation, model_id, data, table, result):\n    """为预测偏差过大的数据打标; 当预测结果(result)与实际打标值(0或1)的差值超过 deviation、将修改该数据的 special 为 yes ，并在 remark 列追加原因"""\n    if abs(float(data.get(\'is_abnormal\')) - float(result)) >= float(deviation):\n        print(f"""偏差超过{str(deviation)}、将在数据集表remark记录""")\n        DB_ChangeSql(conn, f""" UPDATE sec_ai.{table} SET special=\'yes\',\n                remark = CONCAT(remark, \'{datetime.datetime.strftime(datetime.datetime.now(), "%Y-%m-%d %H:%M:%S")} {model_id}号模型预测结果为{result}、偏差超过{str(deviation)}\')\n                WHERE md5_sample=\'{data.get("md5_sample")}\' ; """, isCommit=True)        \n    return\n\n',
        'conn.affected_rows()\n',
        'def RemarkMistake(conn, deviation, model_id, data, table, result):\n    """为预测偏差过大的数据打标; 当预测结果(result)与实际打标值(0或1)的差值超过 deviation、将修改该数据的 special 为 yes ，并在 remark 列追加原因"""\n    if abs(float(data.get(\'is_abnormal\')) - float(result)) >= float(deviation):\n        print(f"""偏差超过{str(deviation)}、将在数据集表remark记录""")\n        DB_ChangeSql(conn, f""" UPDATE sec_ai.{table} SET special=\'yes\',\n                remark = CONCAT(remark, \'{datetime.datetime.strftime(datetime.datetime.now(), "%Y-%m-%d %H:%M:%S")} {model_id}号模型预测结果为{result}、偏差超过{str(deviation)}\')\n                WHERE md5_sample=\'{data.get("md5_sample")}\' ; """, isCommit=True)        \n    return conn.affected_rows()\n\n',
        'RemarkMistake(conn, 0.2, model_id, each, _table, result)\n',
        'DB_ChangeSql(conn, f""" UPDATE sec_ai.{table} SET special=\'yes\',\n                remark = CONCAT(remark, \'{datetime.datetime.strftime(datetime.datetime.now(), "%Y-%m-%d %H:%M:%S")} {model_id}号模型预测结果为{result}、偏差超过{str(deviation)}\')\n                WHERE md5_sample=\'{data.get("md5_sample")}\' ; """, isCommit=True)\n\n']},
                       'launch-id': None,
                       'sel-line': 101,
                       'sel-line-start': 8500,
                       'selection_end': 8500,
                       'selection_start': 8500,
                       'zoom': 0}),
                     ('python-shell',
                      'wide',
                      0,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2,
                       'sel-line-start': 171,
                       'selection_end': 171,
                       'selection_start': 171,
                       'zoom': 0})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('lstm/lstm-2-prediction.py'),
        {'attrib-starts': [('main|0|',
                            36)],
         'code-line': '        RemarkMistake(conn, 0.2, model_id, each, _table, result)\r\n',
         'first-line': 42,
         'folded-linenos': [],
         'sel-line': 67,
         'sel-line-start': 4319,
         'selection_end': 4364,
         'selection_start': 4364,
         'zoom': 0},
        1723825642.0553243],
        [loc('lstm/lstm-2-prediction.py'),
         {'attrib-starts': [('RemarkMistake|0|',
                             28)],
          'code-line': '    """为预测偏差过大的数据打标; 当预测结果(result)与实际打标值(0或1)的差值超过 deviation、将修改该数据的 special 为 yes ，并在 remark 列追加原因"""\r\n',
          'first-line': 15,
          'folded-linenos': [],
          'sel-line': 29,
          'sel-line-start': 1193,
          'selection_end': 1233,
          'selection_start': 1233,
          'zoom': 0},
         1723825726.0706966],
        [loc('lstm/lstm-2-prediction.py'),
         {'attrib-starts': [('main|0|',
                             37)],
          'code-line': "    _table = random.choice(['data_val_list', 'data_train_list', 'data_test_list'])\r\n",
          'first-line': 43,
          'folded-linenos': [],
          'sel-line': 46,
          'sel-line-start': 2617,
          'selection_end': 2696,
          'selection_start': 2682,
          'zoom': 0},
         1723826167.7148166],
        [loc('lstm/0_ReadCsvInsertDB.py'),
         {'attrib-starts': [],
          'code-line': '#coding=utf-8\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0,
          'zoom': 0},
         1723826175.2157788],
        [loc('lstm/0_ReadCsvInsertDB.py'),
         {'attrib-starts': [('ReadCsvToSql|0|',
                             6)],
          'code-line': '        (remark, length_req_body, http_method, md5_sample, sample_b64, is_abnormal, attack_type, attack_type_zh, length_sample, req_line_b64, length_req_line,\r\n',
          'first-line': 33,
          'folded-linenos': [],
          'sel-line': 39,
          'sel-line-start': 1724,
          'selection_end': 1739,
          'selection_start': 1733,
          'zoom': -1},
         1723826261.708509],
        [loc('lstm/lstm-2-prediction.py'),
         {'attrib-starts': [('main|0|',
                             37)],
          'code-line': "    _table = random.choice(['data_val_list', 'data_train_list', 'data_test_list'])\r\n",
          'first-line': 51,
          'folded-linenos': [],
          'sel-line': 46,
          'sel-line-start': 2617,
          'selection_end': 2678,
          'selection_start': 2663,
          'zoom': 0},
         1723826410.1745641],
        [loc('lstm/lstm-2-prediction.py'),
         {'attrib-starts': [('predict_data|0|',
                             7)],
          'code-line': '    loaded_model = load_model(m_details.get("model_file_path_SavedModel"))\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 15,
          'sel-line-start': 589,
          'selection_end': 618,
          'selection_start': 608,
          'zoom': 0},
         1724167675.8261828],
        [loc('lstm/lstm-1-train-test.py'),
         {'attrib-starts': [('test_model|0|',
                             125)],
          'code-line': '    x_train_data = pandas.read_sql(SQLQueyData.format(table_name="data_train_list"), conn).to_dict(orient=\'list\')\r\n',
          'first-line': 143,
          'folded-linenos': [],
          'sel-line': 135,
          'sel-line-start': 7310,
          'selection_end': 7356,
          'selection_start': 7345,
          'zoom': 0},
         1724167684.2978153],
        [loc('lstm/common_func.py'),
         {'attrib-starts': [],
          'code-line': 'import os, json, base64, hashlib, datetime, sys, time, random\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 1,
          'sel-line-start': 15,
          'selection_end': 76,
          'selection_start': 70,
          'zoom': 0},
         1724167695.071569],
        [loc('lstm/lstm-1-train-test.py'),
         {'attrib-starts': [('test_model|0|',
                             125)],
          'code-line': '    x_train_data = pandas.read_sql(SQLQueyData.format(table_name="data_train_list"), conn).to_dict(orient=\'list\')\r\n',
          'first-line': 143,
          'folded-linenos': [],
          'sel-line': 135,
          'sel-line-start': 7310,
          'selection_end': 7356,
          'selection_start': 7345,
          'zoom': 0},
         1724167735.0504827],
        [loc('lstm/lstm-1-train-test.py'),
         {'attrib-starts': [],
          'code-line': 'def preprocess_data(x_train, x_val, x_test, maxlen):\r\n',
          'first-line': 12,
          'folded-linenos': [],
          'sel-line': 17,
          'sel-line-start': 1056,
          'selection_end': 1075,
          'selection_start': 1060,
          'zoom': 0},
         1724167744.9220595],
        [loc('lstm/lstm-1-train-test.py'),
         {'attrib-starts': [('main|0|',
                             179)],
          'code-line': '        model_name = train_model(conn, epochs)\r\n',
          'first-line': 177,
          'folded-linenos': [],
          'sel-line': 186,
          'sel-line-start': 10092,
          'selection_end': 10124,
          'selection_start': 10113,
          'zoom': 0},
         1724167753.2998044],
        [loc('lstm/lstm-1-train-test.py'),
         {'attrib-starts': [('train_model|0|',
                             46)],
          'code-line': '    x_train_padded, x_val_padded, _, tokenizer = preprocess_data(x_train, x_val, [], _maxlen)\r\n',
          'first-line': 50,
          'folded-linenos': [],
          'sel-line': 61,
          'sel-line-start': 3091,
          'selection_end': 3155,
          'selection_start': 3140,
          'zoom': 0},
         1724167800.0378635],
        [loc('lstm/lstm-1-train-test.py'),
         {'attrib-starts': [('preprocess_data|0|',
                             17)],
          'code-line': '    return x_train_padded, x_val_padded, x_test_padded, tokenizer\r\n',
          'first-line': 15,
          'folded-linenos': [],
          'sel-line': 29,
          'sel-line-start': 1640,
          'selection_end': 1694,
          'selection_start': 1681,
          'zoom': 0},
         1724167810.8337889],
        [loc('lstm/lstm-1-train-test.py'),
         {'attrib-starts': [],
          'code-line': 'def main():\r\n',
          'first-line': 180,
          'folded-linenos': [],
          'sel-line': 179,
          'sel-line-start': 9846,
          'selection_end': 9854,
          'selection_start': 9850,
          'zoom': 0},
         1724167817.081597],
        [loc('lstm/lstm-1-train-test.py'),
         {'attrib-starts': [('train_model|0|',
                             46)],
          'code-line': '    x_train_padded, x_val_padded, _, tokenizer = preprocess_data(x_train, x_val, [], _maxlen)\r\n',
          'first-line': 53,
          'folded-linenos': [],
          'sel-line': 61,
          'sel-line-start': 3091,
          'selection_end': 3126,
          'selection_start': 3125,
          'zoom': 0},
         1724168425.4351099],
        [loc('LSTM-CNN(MVC-BiCNN)/main.py'),
         {'attrib-starts': [],
          'code-line': '',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0,
          'zoom': 0},
         1724168443.718348],
        [loc('LSTM-CNN(MVC-BiCNN)/README.md'),
         {'attrib-starts': [],
          'code-line': 'https://www.kdocs.cn/l/cvXmgVqdk9fe',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 4,
          'sel-line-start': 67,
          'selection_end': 102,
          'selection_start': 102,
          'zoom': 0},
         1724168508.47505],
        [loc('LSTM-CNN(MVC-BiCNN)/main.py'),
         {'attrib-starts': [],
          'code-line': 'X_train, y_train = preprocess_and_generate_views(train_data)\r\n',
          'first-line': 44,
          'folded-linenos': [],
          'sel-line': 48,
          'sel-line-start': 1565,
          'selection_end': 1686,
          'selection_start': 1565,
          'zoom': 0},
         1724168537.2440348],
        [loc('LSTM-CNN(MVC-BiCNN)/main.py'),
         {'attrib-starts': [],
          'code-line': 'def create_mvc_bicnn(max_length, vocab_size, embedding_dim, num_classes):\r\n',
          'first-line': 3,
          'folded-linenos': [],
          'sel-line': 4,
          'sel-line-start': 193,
          'selection_end': 213,
          'selection_start': 197,
          'zoom': 0},
         1724168539.7252903]],
        20),
        'current-loc': loc('LSTM-CNN(MVC-BiCNN)/main.py'),
        'editor-state-list': [(loc('LSTM-CNN(MVC-BiCNN)/main.py'),
                               {'attrib-starts': [],
                                'code-line': 'X_train, y_train = preprocess_and_generate_views(train_data)\r\n',
                                'first-line': 35,
                                'folded-linenos': [],
                                'sel-line': 48,
                                'sel-line-start': 1565,
                                'selection_end': 1613,
                                'selection_start': 1584,
                                'zoom': 0}),
                              (loc('LSTM-CNN(MVC-BiCNN)/README.md'),
                               {'attrib-starts': [],
                                'code-line': 'https://www.kdocs.cn/l/cvXmgVqdk9fe',
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 4,
                                'sel-line-start': 67,
                                'selection_end': 102,
                                'selection_start': 102,
                                'zoom': 0})],
        'has-focus': True,
        'locked': False},
        [loc('LSTM-CNN(MVC-BiCNN)/main.py'),
         loc('LSTM-CNN(MVC-BiCNN)/README.md')]),
                               'open_files': ['LSTM-CNN(MVC-BiCNN)/README.md',
        'LSTM-CNN(MVC-BiCNN)/main.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 1,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           3),
                          1724168567.0294228),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1724168416.2502878),
                 'user_data': {}},
        'window-alloc': (32,
                         -1,
                         1648,
                         891)},
        {'name': 'yZTTaeXE6ZerwKWYCFK4fYfUeUwq53x4',
         'size-state': 'maximized',
         'type': 'panel-tall',
         'view': {'area': 'window-wide',
                  'constraint': None,
                  'current_pages': [0],
                  'override_title': None,
                  'pagelist': [('debug-probe',
                                'window-wide',
                                0,
                                {'active-range': (None,
        -1,
        -1),
                                 'attrib-starts': [],
                                 'code-line': '',
                                 'first-line': 0,
                                 'folded-linenos': [],
                                 'history': {},
                                 'launch-id': None,
                                 'sel-line': 0,
                                 'sel-line-start': 0,
                                 'selection_end': 0,
                                 'selection_start': 0,
                                 'zoom': 0})],
                  'split_percents': {},
                  'splits': 1,
                  'tab_location': 'top',
                  'traversal_pos': ((-1,
                                     -1),
                                    0),
                  'user_data': {}},
         'window-alloc': None}]}
guimgr.recent-documents = [loc('LSTM-CNN(MVC-BiCNN)/main.py'),
                           loc('LSTM-CNN(MVC-BiCNN)/README.md')]
guimgr.visual-state = {loc('../../../mambaforge/envs/ai-sec/Lib/site-packages/pandas/core/methods/to_dict.py'): {'attrib-starts': [('to_dict|4|',
        77)],
        'code-line': '        raise ValueError(f"orient \'{orient}\' not understood")\n',
        'first-line': 254,
        'folded-linenos': [],
        'sel-line': 271,
        'sel-line-start': 8587,
        'selection_end': 8587,
        'selection_start': 8587,
        'zoom': 0},
                       loc('../../../mambaforge/envs/ai-sec/Lib/site-packages/pandas/io/sql.py'): {'attrib-starts': [('SQLiteDatabase|0|',
        2641),
        ('SQLiteDatabase|0|.execute|0|',
         2667)],
        'code-line': '                raise ex from inner_exc\n',
        'first-line': 2665,
        'folded-linenos': [],
        'sel-line': 2682,
        'sel-line-start': 93320,
        'selection_end': 93320,
        'selection_start': 93320,
        'zoom': 0},
                       loc('../../../mambaforge/envs/ai-sec/Lib/site-packages/pandas/util/_decorators.py'): {'attrib-starts': [('deprecate_nonkeyword_arguments|0|',
        265),
        ('deprecate_nonkeyword_arguments|0|.decorate|0|',
         293),
        ('deprecate_nonkeyword_arguments|0|.decorate|0|.wrapper|0|',
         325)],
        'code-line': '            return func(*args, **kwargs)\n',
        'first-line': 321,
        'folded-linenos': [],
        'sel-line': 332,
        'sel-line-start': 11540,
        'selection_end': 11540,
        'selection_start': 11540,
        'zoom': 0},
                       loc('../../../mambaforge/envs/ai-sec/Lib/site-packages/pymysql/_auth.py'): {'attrib-starts': [('sha2_rsa_encrypt|0|',
        137)],
        'code-line': '        raise RuntimeError(\n',
        'first-line': 132,
        'folded-linenos': [],
        'sel-line': 143,
        'sel-line-start': 3647,
        'selection_end': 3647,
        'selection_start': 3647,
        'zoom': 0},
                       loc('../../../mambaforge/envs/ai-sec/Lib/site-packages/tensorflow/_api/v2/config/__init__.py'): {'attrib-starts': [],
        'code-line': '# This file is MACHINE GENERATED! Do not edit.\r\n',
        'first-line': 11,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 1955,
        'selection_start': 0,
        'zoom': 0},
                       loc('../../data/mambaforge/envs/api-sec/lib/python3.11/json/__init__.py'): {'attrib-starts': [('loads|0|',
        298)],
        'code-line': "            raise TypeError(f'the JSON object must be str, bytes or bytearray, '\n",
        'first-line': 320,
        'folded-linenos': [],
        'sel-line': 338,
        'sel-line-start': 13137,
        'selection_end': 13137,
        'selection_start': 13137,
        'zoom': 0},
                       loc('../../data/mambaforge/envs/api-sec/lib/python3.11/site-packages/keras/src/engine/data_adapter.py'): {'attrib-starts': [('DataHandler|0|',
        1221),
        ('DataHandler|0|.__init__|0|',
         1224)],
        'code-line': '            raise ValueError(\n',
        'first-line': 1256,
        'folded-linenos': [],
        'sel-line': 1274,
        'sel-line-start': 44462,
        'selection_end': 44462,
        'selection_start': 44462,
        'zoom': 0},
                       loc('../../data/mambaforge/envs/api-sec/lib/python3.11/site-packages/keras/src/engine/input_spec.py'): {'attrib-starts': [('assert_input_compatibility|0|',
        168)],
        'code-line': '                        raise ValueError(\n',
        'first-line': 285,
        'folded-linenos': [],
        'sel-line': 297,
        'sel-line-start': 11294,
        'selection_end': 11294,
        'selection_start': 11294,
        'zoom': 0},
                       loc('../../data/mambaforge/envs/api-sec/lib/python3.11/site-packages/keras/src/preprocessing/text.py'): {'attrib-starts': [('text_to_word_sequence|0|',
        39)],
        'code-line': '        input_text = input_text.lower()\n',
        'first-line': 62,
        'folded-linenos': [],
        'sel-line': 73,
        'sel-line-start': 2789,
        'selection_end': 2789,
        'selection_start': 2789,
        'zoom': 0},
                       loc('../../data/mambaforge/envs/api-sec/lib/python3.11/site-packages/keras/src/saving/legacy/save.py'): {'attrib-starts': [('load_model|0|',
        179)],
        'code-line': '                            raise IOError(\n',
        'first-line': 228,
        'folded-linenos': [],
        'sel-line': 233,
        'sel-line-start': 9820,
        'selection_end': 9820,
        'selection_start': 9820,
        'zoom': 0},
                       loc('../../data/mambaforge/envs/api-sec/lib/python3.11/site-packages/pandas/io/sql.py'): {'attrib-starts': [('SQLiteDatabase|0|',
        2641),
        ('SQLiteDatabase|0|.execute|0|',
         2667)],
        'code-line': '            raise ex from exc\n',
        'first-line': 2667,
        'folded-linenos': [],
        'sel-line': 2685,
        'sel-line-start': 93435,
        'selection_end': 93435,
        'selection_start': 93435,
        'zoom': 0},
                       loc('../../data/mambaforge/envs/api-sec/lib/python3.11/site-packages/pandas/util/_decorators.py'): {'attrib-starts': [('deprecate_nonkeyword_arguments|0|',
        265),
        ('deprecate_nonkeyword_arguments|0|.decorate|0|',
         293),
        ('deprecate_nonkeyword_arguments|0|.decorate|0|.wrapper|0|',
         325)],
        'code-line': '            return func(*args, **kwargs)\n',
        'first-line': 314,
        'folded-linenos': [],
        'sel-line': 332,
        'sel-line-start': 11540,
        'selection_end': 11540,
        'selection_start': 11540,
        'zoom': 0},
                       loc('../../mambaforge/envs/ai-sec/Lib/site-packages/keras/src/layers/layer.py'): {'attrib-starts': [('Layer|0|',
        60),
        ('Layer|0|.__init__|0|',
         236)],
        'code-line': '            raise ValueError(\n',
        'first-line': 248,
        'folded-linenos': [],
        'sel-line': 265,
        'sel-line-start': 10266,
        'selection_end': 10266,
        'selection_start': 10266,
        'zoom': 0},
                       loc('../../mambaforge/envs/ai-sec/Lib/site-packages/keras/src/ops/operation.py'): {'attrib-starts': [('Operation|0|',
        15),
        ('Operation|0|._get_node_attribute_at_index|0|',
         267)],
        'code-line': '            raise ValueError(\n',
        'first-line': 267,
        'folded-linenos': [],
        'sel-line': 284,
        'sel-line-start': 10726,
        'selection_end': 10726,
        'selection_start': 10726,
        'zoom': 0},
                       loc('../../mambaforge/envs/ai-sec/Lib/site-packages/keras/src/saving/saving_api.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('../../tmp/__autograph_generated_file9foip1mf.py'): {'attrib-starts': [('outer_factory|0|',
        1),
        ('outer_factory|0|.inner_factory|0|',
         5),
        ('outer_factory|0|.inner_factory|0|.tf__test_function|0|',
         7)],
        'code-line': '                    retval_ = ag__.converted_call(ag__.ld(step_function), (ag__.ld(self), ag__.ld(iterator)), None, fscope)\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 545,
        'selection_end': 545,
        'selection_start': 545,
        'zoom': 0},
                       loc('../../tmp/__autograph_generated_fileovdqe4xb.py'): {'attrib-starts': [('outer_factory|0|',
        1),
        ('outer_factory|0|.inner_factory|0|',
         5),
        ('outer_factory|0|.inner_factory|0|.tf__predict_function|0|',
         7)],
        'code-line': '                    retval_ = ag__.converted_call(ag__.ld(step_function), (ag__.ld(self), ag__.ld(iterator)), None, fscope)\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 558,
        'selection_end': 558,
        'selection_start': 558,
        'zoom': 0},
                       loc('../../tmp/__autograph_generated_filetxixvx1y.py'): {'attrib-starts': [('outer_factory|0|',
        1)],
        'code-line': '\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 4,
        'sel-line-start': 77,
        'selection_end': 77,
        'selection_start': 77,
        'zoom': 0},
                       loc('.gitignore'): {'attrib-starts': [],
        'code-line': './__pycache__/*',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 15,
        'selection_start': 15,
        'zoom': 0},
                       loc('0-Data-TrainTest/占位.md'): {'attrib-starts': [],
        'code-line': '#',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 1,
        'selection_start': 1,
        'zoom': 0},
                       loc('1-Data_Train_X/0_local_debug_resultTag.txt'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('1-Data_Train_X/0_local_debug_sample.txt'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('LSTM-1-train.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('LSTM-2-test-savedModel.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('LSTM-2-testAccLoss.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('LSTM-3-Prediction.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('SaveModel/2024-05-22_00-14-46.663797_SavedModel/saved_model.pb'): {'attrib-starts': [],
        'code-line': '\x08\x01\x12��(\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('SaveModel/2024-05-22_00-14-46.663797_SavedModel/variables/variables.index'): {'attrib-starts': [],
        'code-line': '\x00\x00\x06\x08\x01\x1a\x02\x08\x01\x00\x1c\x11_CHECKPOINTABLE_OBJECT_GRAPH\x08\x07\x12\x00 ���\x03(�05��\x19\x004\x10keras_api/metrics/0/count/.ATTRIBUTES/VARIABLE_VALUE\x08\x01\x12\x00 ���\x03(\x045q\x1f��\x14 \x10total/.ATTRIBUTES/VARIABLE_VALUE\x08\x01\x12\x00 ���\x03(\x045\x7f�>�\x12"\x101/count/.ATTRIBUTES/VARIABLE_VALUE\x08\x01\x12\x00 ���\x03(\x045q\x1f��\x14 \x10total/.ATTRIBUTES/VARIABLE_VALUE\x08\x01\x12\x00 ���\x03(\x045q\x1f��\x00:\x17layer_with_weights-0/embeddings/.ATTRIBUTES/VARIABLE_VALUE\x08\x01\x12\t\x12\x03\x08�N\x12\x02\x08@(���\x015h�x�\x13!\x142/bias/.ATTRIBUTES/VARIABLE_VALUE\x08\x01\x12\x04\x12\x02\x08\x01 ���\x01(\x045)8v\x1e\x15!\x19kernel/.ATTRIBUTES/VARIABLE_VALUE\x08\x01\x12\x08\x12\x02\x08@\x12\x02\x08\x01 ���\x01(�\x025\x1d���\x000\x10optimizer/_iterations/.ATTRIBUTES/VARIABLE_VALUE\x08\t\x12\x00 ���\x01(\x085�\x0f��\x0b(\x10learning_rate/.ATTRIBUTES/VARIABLE_VALUE\x08\x01\x12\x00 ���\x01(\x045i�U2\x0b&\x1cvariables/1/.ATTRIBUTES/VARIABLE_VALUE\x08\x01\x12\t\x12\x03\x08�N\x12\x02\x08@ ���\x01(���\x015+�a�\x16\x1c\x190/.ATTRIBUTES/VARIABLE_VALUE\x08\x01\x12\x08\x12\x02\x08@\x12\x02\x08\x01 ���\x03(�\x025��f�\x16\x1c\x141/.ATTRIBUTES/VARIABLE_VALUE\x08\x01\x12\x04\x12\x02\x08\x01 ���\x03(\x045 \x07\u0380\x16\x1c\x142/.ATTRIBUTES/VARIABLE_VALUE\x08\x01\x12\x04\x12\x02\x08\x01 ���\x03(\x045\x19�,�\x15\x1c\x1c2/.ATTRIBUTES/VARIABLE_VALUE\x08\x01\x12\t\x12\x03\x08�N\x12\x02\x08@ ���\x02(���\x015~��n\x001\x1boptimizer/_variables/3/.ATTRIBUTES/VARIABLE_VALUE\x08\x01\x12\t\x12\x02\x08@\x12\x03\x08�\x02 ���\x03(��\x045\x18KV\x04\x15\x1c\x1b4/.ATTRIBUTES/VARIABLE_VALUE\x08\x01\x12\t\x12\x02\x08@\x12\x03\x08�\x02 ���\x03(�',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('SaveModel/2024-05-22_00-14-46.663797_model.h5'): {'attrib-starts': [],
        'code-line': '\x89HDF\r\n',
        'first-line': 2,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('SaveModel/2024-05-24_23-10-53.540293_SavedModel/.gitignore'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('configures/0_common_func.py'): {'attrib-starts': [('DB_Conn|0|',
        5)],
        'code-line': '        host=DB_CONN_DICT.get("host"),\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 243,
        'selection_end': 261,
        'selection_start': 261,
        'zoom': 0},
                       loc('configures/__init__.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('configures/app_conf.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('lstm/0-Data-TrainTest/normal-tobe-insert/train-normal-output.csv'): {'attrib-starts': [],
        'code-line': 'action,attack,cookie,headers,host,id,payload,payload_location,policyid,request_line,rule,sip,time,url\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('lstm/0_ReadCsvInsertDB.py'): {'attrib-starts': [('ReadCsvToSql|0|',
        6)],
        'code-line': '        (remark, length_req_body, http_method, md5_sample, sample_b64, is_abnormal, attack_type, attack_type_zh, length_sample, req_line_b64, length_req_line,\r\n',
        'first-line': 33,
        'folded-linenos': [],
        'sel-line': 39,
        'sel-line-start': 1724,
        'selection_end': 1739,
        'selection_start': 1733,
        'zoom': -1},
                       loc('lstm/GPU_Intel_LSTM_train.py'): {'attrib-starts': [],
        'code-line': "physical_devices = tf.config.list_physical_devices('GPU')\r\n",
        'first-line': 144,
        'folded-linenos': [],
        'sel-line': 106,
        'sel-line-start': 3627,
        'selection_end': 3677,
        'selection_start': 3646,
        'zoom': 0},
                       loc('lstm/LSTM-1-train.py'): {'attrib-starts': [],
        'code-line': '#coding=utf-8\r\n',
        'first-line': 112,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 6116,
        'selection_start': 0,
        'zoom': 0},
                       loc('lstm/LSTM-2-testAccLoss.py'): {'attrib-starts': [],
        'code-line': 'loaded_model_savedmodel = load_model(m_details.get("model_file_path_SavedModel"))\r\n',
        'first-line': 32,
        'folded-linenos': [],
        'sel-line': 48,
        'sel-line-start': 1824,
        'selection_end': 1860,
        'selection_start': 1850,
        'zoom': 0},
                       loc('lstm/SaveModel/2024-08-15_23-56-51.998891_tokenizer.json'): {'attrib-starts': [],
        'code-line': '"{\\"class_name\\": \\"Tokenizer\\", \\"config\\": {\\"num_words\\": 10000, \\"filters\\": \\"!\\\\\\"#$%&()*+,-./:;<=>?@[\\\\\\\\]^_`{|}~\\\\t\\\\n\\", \\"lower\\": true, \\"split\\": \\" \\", \\"char_level\\": false, \\"oov_token\\": null, \\"document_count\\": 150, \\"word_counts\\": \\"{\\\\\\"get\\\\\\": 81, \\\\\\"https\\\\\\": 372, \\\\\\"gitlab\\\\\\": 358, \\\\\\"com\\\\\\": 230, \\\\\\"assets\\\\\\": 72, \\\\\\"sans\\\\\\": 6, \\\\\\"gitlabsans\\\\\\": 6, \\\\\\"1e0a5107ea3bbd4be93e8ad2c503467e43166cd37e4293570b490e0812ede98b\\\\\\": 6, \\\\\\"woff2\\\\\\": 3, \\\\\\"http\\\\\\": 215, \\\\\\"2\\\\\\": 194, \\\\\\"0\\\\\\\\r\\\\\\": 222, \\\\\\"authority\\\\\\": 86, \\\\\\"com\\\\\\\\r\\\\\\": 104, \\\\\\"method\\\\\\": 89, \\\\\\"get\\\\\\\\r\\\\\\": 69, \\\\\\"path\\\\\\": 140, \\\\\\"woff2\\\\\\\\r\\\\\\": 3, \\\\\\"scheme\\\\\\": 86, \\\\\\"https\\\\\\\\r\\\\\\": 136, \\\\\\"accept\\\\\\": 427, \\\\\\"\\\\\\\\r\\\\\\": 854, \\\\\\"encoding\\\\\\": 150, \\\\\\"gzip\\\\\\": 99, \\\\\\"deflate\\\\\\": 99, \\\\\\"br\\\\\\": 99, \\\\\\"zstd\\\\\\\\r\\\\\\": 99, \\\\\\"language\\\\\\": 188, \\\\\\"zh\\\\\\": 286, \\\\\\"cn\\\\\\": 171, \\\\\\"q\\\\\\": 319, \\\\\\"0\\\\\\": 2052, \\\\\\"9\\\\\\": 110, \\\\\\"en\\\\\\": 99, \\\\\\"8\\\\\\\\r\\\\\\": 166, \\\\\\"cache\\\\\\": 91, \\\\\\"',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('lstm/_old_files_/LSTM-1-train.py'): {'attrib-starts': [],
        'code-line': 'x_train_data = pandas.read_sql(SQLQueyData.format(table_name="data_train_list"), conn).to_dict(orient=\'list\')\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 9,
        'sel-line-start': 241,
        'selection_end': 283,
        'selection_start': 272,
        'zoom': 0},
                       loc('lstm/common_func.py'): {'attrib-starts': [],
        'code-line': 'import os, json, base64, hashlib, datetime, sys, time, random\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 15,
        'selection_end': 76,
        'selection_start': 70,
        'zoom': 0},
                       loc('lstm/configures/0_common_func.py'): {'attrib-starts': [('DB_Conn|0|',
        5)],
        'code-line': '        host=DB_CONN_DICT.get("host"),\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 251,
        'selection_end': 276,
        'selection_start': 264,
        'zoom': 0},
                       loc('lstm/configures/app_conf.py'): {'attrib-starts': [],
        'code-line': "    database = 'sec_ai')\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 240,
        'selection_end': 264,
        'selection_start': 264,
        'zoom': 0},
                       loc('lstm/lstm-1-train-test.py'): {'attrib-starts': [('train_model|0|',
        46)],
        'code-line': '    x_train_padded, x_val_padded, _, tokenizer = preprocess_data(x_train, x_val, [], _maxlen)\r\n',
        'first-line': 53,
        'folded-linenos': [],
        'sel-line': 61,
        'sel-line-start': 3091,
        'selection_end': 3126,
        'selection_start': 3125,
        'zoom': 0},
                       loc('lstm/lstm-2-prediction.py'): {'attrib-starts': [('predict_data|0|',
        7)],
        'code-line': '    loaded_model = load_model(m_details.get("model_file_path_SavedModel"))\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 589,
        'selection_end': 618,
        'selection_start': 608,
        'zoom': 0},
                       loc('lstm/requirements.txt'): {'attrib-starts': [],
        'code-line': 'cryptography\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 19,
        'selection_end': 31,
        'selection_start': 31,
        'zoom': 0},
                       loc('output.csv'): {'attrib-starts': [],
        'code-line': 'action,attack,cookie,headers,host,id,payload,payload_location,policyid,request_line,rule,sip,time,url\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('requirements.txt'): {'attrib-starts': [],
        'code-line': 'tensorflow\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 34,
        'selection_start': 0,
        'zoom': 0}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [''])}
proj.pyexec = {None: ('activate',
                      'mamba activate ai-sec')}
proj.vcs-system-config = ('prefs',
                          {'cvs': {'versioncontrol.cvs.active': 'active-if-project-dir',
                                   'versioncontrol.cvs.executable': 'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-z3'},
                           'git': {'versioncontrol.git.active': 'active-if-project-dir',
                                   'versioncontrol.git.executable': 'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-project-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': 'hg',
                                  'versioncontrol.hg.extra-global-args': '--encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'not-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': 'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-project-dir',
                                   'versioncontrol.svn.executable': 'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': 'svnadmin'}})
search.search-history = ['random',
                         'json',
                         'SQLQueyData',
                         '输入学习训练使用的正常数据样本量',
                         'tokenizer_from_json',
                         'tokenizer',
                         'load_model',
                         'x_train_data',
                         'def DB_Conn',
                         '0_common_func',
                         'DB_ChangeSql',
                         '_feed_input_shapes',
                         'Sequential',
                         'date',
                         'val_sample_ids',
                         'binary_crossentropy',
                         'model.fit(x_train_padded',
                         'batch_size',
                         'FROM_BASE64(sample)',
                         'sample']
testing.stored-results = (1,
                          [],
                          {})
